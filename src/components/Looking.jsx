/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 .\public\static\Looking.glb
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'

const Looking = (props) => {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('./static/Looking.glb')
  const { actions , names } = useAnimations(animations, group);
  console.log(names);

  useEffect(() => {
    actions[names[0]].reset().fadeIn(0.5).play();
  
  }, [])
  

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Root_Scene">
        <group name="RootNode">
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh castShadow name="Alpha_Surface" geometry={nodes.Alpha_Surface.geometry} material={materials.Alpha_Body_MAT} skeleton={nodes.Alpha_Surface.skeleton} />
          <skinnedMesh castShadow name="Alpha_Joints" geometry={nodes.Alpha_Joints.geometry} material={materials.Alpha_Joints_MAT} skeleton={nodes.Alpha_Joints.skeleton} />
        </group>
      </group>
    </group>
  )
}

export default Looking;  

useGLTF.preload('./static/Looking.glb')
